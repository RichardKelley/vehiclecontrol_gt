function [ACCX,ACCY,ACCROTZ] = modelDx_NN_1x16_tanh_reg0p01(VELX,VELY,VELROTZ,BETA,AB,TV, param)
    %param = [B1,C1,D1,B2,C2,D2,Ic];
    B1 = param(1);
    C1 = param(2);
    D1 = param(3);
    B2 = param(4);
    C2 = param(5);
    D2 = param(6);
    Ic = param(7);
    %maxA = param(8);
    magic = @(s,B,C,D)D.*sin(C.*atan(B.*s));
    reg = 0.5;
    capfactor = @(taccx)(1-satfun((taccx/D2)^2))^(1/2);
    simpleslip = @(VELY,VELX,taccx)-(1/capfactor(taccx))*VELY/(VELX+reg);
    %simpleslip = @(VELY,VELX,taccx)-VELY/(VELX+reg);
    simplediraccy = @(VELY,VELX,taccx)magic(simpleslip(VELY,VELX,taccx),B2,C2,D2);
    simpleaccy = @(VELY,VELX,taccx)capfactor(taccx)*simplediraccy(VELY,VELX,taccx);
    %acclim = @(VELY,VELX, taccx)(VELX^2+VELY^2)*taccx^2-VELX^2*maxA^2;
    simplefaccy = @(VELY,VELX)magic(-VELY/(VELX+reg),B1,C1,D1);
    %simpleaccy = @(VELY,VELX,taccx)magic(-VELY/(VELX+reg),B2,C2,D2);



    l = 1.19;
    l1 = 0.73;
    l2 = l-l1;
    f1n = l2/l;
    f2n = l1/l;
    w = 1;
    rotmat = @(beta)[cos(beta),sin(beta);-sin(beta),cos(beta)];
    vel1 = rotmat(BETA)*[VELX;VELY+l1*VELROTZ];
    f1y = simplefaccy(vel1(2),vel1(1));
    F1 = rotmat(-BETA)*[0;f1y]*f1n;
    F1x = F1(1);
    F1y = F1(2);
    frontabcorr = F1x;
    F2x = AB;
    F2y1 = simpleaccy(VELY-l2*VELROTZ,VELX,(AB+TV/2)/f2n)*f2n/2;
    F2y2 = simpleaccy(VELY-l2*VELROTZ,VELX,(AB-TV/2)/f2n)*f2n/2;
    F2y = simpleaccy(VELY-l2*VELROTZ,VELX,AB/f2n)*f2n;
    TVTrq = TV*w;
    
    
    ACCROTZ_NOM = (TVTrq + F1y*l1 -F2y*l2)/Ic;
    %ACCROTZ = TVTrq + F1y*l1;
    ACCX_NOM = F1x+F2x+VELROTZ*VELY;
    ACCY_NOM = F1y+F2y1+F2y2-VELROTZ*VELX;
    
    w1 = [-0.08070386 -0.035813738 0.41473418 0.0022040503 0.48240212 0.22862771 0.0419534 -0.8847056 0.27997345 0.1577768 -0.15208352 -0.049930364 -0.025270557 -0.020838657 -0.0822829 0.27548537;0.14036405 -0.34800014 -0.11328894 -0.12190555 0.42333952 2.2673585 -0.029959217 1.5122006 0.19542421 0.046205804 -0.02596743 0.02886795 0.08887065 0.124921925 0.011473536 0.18683109;0.11151071 -0.7896149 0.69414765 -0.15994881 -0.23454393 -1.1099387 -0.31582594 -0.64263046 -0.4665784 -0.4908214 0.23858087 0.344343 0.20581038 0.15307721 0.31588614 -0.46304572;0.07815033 -0.10768 -0.43623087 -9.1202994e-05 -0.37572727 -0.058645703 -0.07638955 0.07180308 0.32624632 0.62123215 -0.02125612 0.12249288 0.046269022 0.024538517 0.08282573 0.3396806;0.07332041 -0.14438991 -0.098418266 0.053076543 0.16841997 -0.035546955 0.010066775 0.013713177 -0.016771914 -0.02095897 0.24424316 0.027197732 -0.030603372 -0.033003807 0.097791046 -0.021239037;0.33221126 0.84295887 0.19428357 -0.3785752 0.31502435 -0.40127718 -0.25360715 -0.6129118 -0.08441287 0.063220225 0.19174533 0.20295933 0.34967545 0.37205052 0.19997124 -0.069486015];
    b1 = [0.048128642 -0.086956784 -0.66623443 -0.0192656 0.14687341 0.28786477 -0.04615155 -0.906518 -0.67010564 -0.40716702 0.084331654 0.009633132 0.055260107 0.03805723 0.027497632 -0.654508];
    w2 = [-0.116448276 0.21580584 -0.516857;0.044334825 -0.57210624 -1.0814636;0.23432387 1.1505928 -0.21156602;-0.108102396 -0.14556842 0.56099504;0.005116217 0.5558258 -0.5134039;0.08468624 2.059258 1.2312882;-0.02927054 -0.4198536 0.40466797;0.11120062 1.8257908 0.18963613;0.016667001 -1.0084519 -0.17934021;-0.14466909 -0.82400197 -0.51160556;-0.22457318 0.50989926 -0.2000493;-0.021766385 0.48139387 -0.33647645;0.05519084 0.24469051 -0.5270934;0.06655588 0.16217656 -0.5586303;-0.092671044 0.4900131 -0.28708923;0.01052483 -0.98929304 -0.2119263];
    b2 = [0.15717164 0.01541886 0.0908304];
    means = [2.6775749832578986 0.001922168301437502 -0.04515304867653743 -0.026195759869689427 0.06460829512732788 -0.0686602322088558];
    stds = [1.907241556285694 0.3079627568782051 0.5515613235298231 0.20101736434516326 0.8309067855283836 0.634574245360539];
    input = [VELX,VELY,VELROTZ,BETA,AB,TV];

    normed_input = (input - means) ./ stds;

    h1 = tanh(normed_input * w1 + b1);
    disturbance = h1 * w2 + b2;
    
    ACCX = ACCX_NOM + disturbance(1);
    ACCY = ACCY_NOM + disturbance(2);
    ACCROTZ = ACCROTZ_NOM + disturbance(3);
end

